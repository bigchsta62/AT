[{"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\store.js":"1","C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\pages\\OrderPage.js":"2","C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\actions\\cartActions.js":"3","C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\components\\List\\List.js":"4","C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\reportWebVitals.js":"5","C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\components\\List\\ListItem.js":"6","C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\constants\\productConstants.js":"7","C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\components\\console_data\\data.js":"8","C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\App.js":"9","C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\constants\\orderConstants.js":"10","C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\constants\\cartConstants.js":"11","C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\index.js":"12","C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\pages\\RegisterPage.js":"13","C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\pages\\PaymentPage.js":"14","C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\components\\ImageCloud\\index.js":"15","C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\actions\\productActions.js":"16"},{"size":1647,"mtime":1606875695784,"results":"17","hashOfConfig":"18"},{"size":6580,"mtime":1606875695781,"results":"19","hashOfConfig":"18"},{"size":1290,"mtime":1606875695767,"results":"20","hashOfConfig":"18"},{"size":210,"mtime":1606875801508,"results":"21","hashOfConfig":"18"},{"size":362,"mtime":1606875695784,"results":"22","hashOfConfig":"18"},{"size":129,"mtime":1606875801508,"results":"23","hashOfConfig":"18"},{"size":361,"mtime":1606875695778,"results":"24","hashOfConfig":"18"},{"size":1686,"mtime":1606875801510,"results":"25","hashOfConfig":"18"},{"size":1665,"mtime":1606875801504,"results":"26","hashOfConfig":"18"},{"size":551,"mtime":1606875695778,"results":"27","hashOfConfig":"18"},{"size":234,"mtime":1606875695778,"results":"28","hashOfConfig":"18"},{"size":594,"mtime":1606875695779,"results":"29","hashOfConfig":"18"},{"size":3206,"mtime":1606875695782,"results":"30","hashOfConfig":"18"},{"size":1766,"mtime":1606875695781,"results":"31","hashOfConfig":"18"},{"size":1730,"mtime":1606875801507,"results":"32","hashOfConfig":"18"},{"size":1198,"mtime":1606875695767,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1akre9f",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\store.js",[],"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\pages\\OrderPage.js",["72"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\n\n\nconst OrderPage = ({ match }) => {\n    const orderId = match.params.id\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, loading, error } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    useEffect(() => {\n        const addPayPalScript = async () => {\n            const { data: clientId } = await axios.get(\"/api/config/paypal\")\n            const script = document.createElement('script')\n            script.type = 'text/javascript'\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n            script.async = true\n            script.onload = () => {\n                setSdkReady(true)\n            }\n            document.body.appendChild(script)\n        }\n\n        // || order._id !== orderId\n\n        if (!order || successPay) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay])\n\n    const successPaymentHandler = (paymentResult) => {\n        console.log(paymentResult)\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : <>\n        <h2>Purchase Order {order._id}</h2>\n        <Row>\n            <Col md={8}>\n                <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                        <h2>Shipping</h2>\n                        {/* <p><strong>Name:</strong> {order.user.email}</p> */}\n                        Address:\n                        {/* <p><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p> */}\n                        <p>\n\n\n                            {order.shippingAddress.address},{' '}\n                            {order.shippingAddress.city},{' '}\n                            {order.shippingAddress.zip}{'  '}\n                            {order.shippingAddress.country}\n\n\n\n                        </p>\n\n                        {order.isDelivered ? <Message variant='success'>{order.deliveredAt}</Message> : <Message variant='danger'>Delivery in Route</Message>}\n\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                        <h2>Payment</h2>\n                        <p>\n                            Method:{' '}{order.paymentMethod}\n                        </p>\n                        {order.isPaid ? <Message variant='success'>{order.paidAt}</Message> : <Message variant='danger'>Payment Required</Message>}\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n\n                        <h2>Current Order</h2>\n\n                        {order.orderItems.length === 0 ? <Message>Where is your Order?</Message> :\n\n\n                            (<ListGroup variant='flush'>\n                                {order.orderItems.map((item, index) => (\n                                    <ListGroup.Item key={index}>\n                                        <Row>\n                                            <Col md={1}>\n                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                            </Col>\n                                            <Col>\n                                                {/* //remember to bring in the link? */}\n                                                <Link to={`/product/${item.product}`}>\n                                                    {item.name}\n                                                </Link>\n                                            </Col>\n                                            <Col md={4} >\n                                                {item.qty} x ${item.price} = ${item.qty * item.price}\n\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                ))}\n                            </ListGroup>\n                            )}\n\n                    </ListGroup.Item>\n                </ListGroup>\n            </Col>\n            <Col md={4}>\n                <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                        <h2> Purchase Summary</h2>\n\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Row>\n                            <Col>Items</Col>\n                            <Col>${order.itemsPrice}</Col>\n                        </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Row>\n                            <Col>Shipping</Col>\n                            <Col>${order.shippingPrice}</Col>\n                        </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n\n                        <Row>\n                            <Col>Tax</Col>\n                            <Col>${order.taxPrice}</Col>\n                        </Row>\n\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Row>\n                            <Col>Total</Col>\n                            <Col>${order.totalPrice}</Col>\n                        </Row>\n                    </ListGroup.Item>\n                    {!order.isPaid && (\n                        <ListGroup.Item>\n                            {loadingPay && <Loader />}\n                            {/* {!sdkReady ? <Loader /> : ( */}\n                            <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\n                            {/* )} */}\n                        </ListGroup.Item>\n                    )}\n                </ListGroup>\n            </Col>\n        </Row>\n    </>\n}\n\nexport default OrderPage\n",["73","74"],"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\actions\\cartActions.js",[],"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\components\\List\\List.js",[],"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\reportWebVitals.js",[],["75","76"],"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\components\\List\\ListItem.js",[],"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\constants\\productConstants.js",[],"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\components\\console_data\\data.js",["77"],"import ProductList from \"../productList\";\nimport FormCard from \"../FormCard\";\nimport Report from \"../Report\"\nimport ProfilePage from '../../pages/ProfilePage'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCoffee } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  // faCoffee,\n  faUserCircle,\n  faListAlt,\n  faEdit,\n  faChartBar,\n} from \"@fortawesome/free-regular-svg-icons\";\n\nexport const AdminSideBar = [\n  // {\n  //   name: \"Admin Console\",\n  //   id: \"\",\n  //   resources: \"<ProductList/>\",\n  //    icon: faCoffee,\n  // },\n  {\n    name: \"Manage Profile\",\n    order: \"s1\",\n    id: \"1\",\n    main: () => <ProfilePage />,\n    icon: faUserCircle,\n  },\n  {\n    name: \"View Products\",\n    order: \"s2\",\n    id: \"ProductList\",\n    main: () => <ProductList />,\n    icon: faListAlt,\n  },\n  {\n    name: \"Add Product\",\n    order: \"s3\",\n    id: \"FormCard\",\n    main: () => <FormCard />,\n    icon: faEdit,\n  },\n  // {\n  //   name: \"Remove Product\",\n  //    order: \"\",\n  //    id: \"\",\n  //   path: \"/ADMIN\",component:\"\"\n  //    icon: faCoffee,\n  // },\n  {\n    name: \"Reports\",\n    order: \"s4\",\n    id: \"4\",\n    main: () => <Report />,\n    icon: faChartBar,\n  },\n];\nexport const UserSideBar = [\n  {\n    name: \"User Console\",\n    order: \"\",\n    id: \"\",\n    main: () => <h2>Home</h2>,\n    icon: faCoffee,\n  },\n  {\n    name: \"Manage Profile\",\n    order: \"\",\n    id: \"\",\n    main: () => <h2>Home</h2>,\n    icon: faCoffee,\n  },\n  {\n    name: \"Payment Methods\",\n    order: \"\",\n    id: \"\",\n    main: () => <h2>Home</h2>,\n    icon: faCoffee,\n  },\n  {\n    // name: \"Purchase History\",\n    // order: \"\",\n    // path: \"\",\n    // component: \"\",\n    // icon: faCoffee,\n  },\n];\n",["78","79"],"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\App.js",[],["80","81"],"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\constants\\orderConstants.js",[],"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\constants\\cartConstants.js",[],"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\index.js",[],"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\pages\\RegisterPage.js",[],"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\pages\\PaymentPage.js",[],"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\components\\ImageCloud\\index.js",["82"],"C:\\Users\\bigch\\Projects\\solo\\AT\\eco\\src\\actions\\productActions.js",[],{"ruleId":"83","severity":1,"message":"84","line":16,"column":12,"nodeType":"85","messageId":"86","endLine":16,"endColumn":20},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"83","severity":1,"message":"93","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":25},{"ruleId":"87","replacedBy":"94"},{"ruleId":"89","replacedBy":"95"},{"ruleId":"87","replacedBy":"96"},{"ruleId":"89","replacedBy":"97"},{"ruleId":"83","severity":1,"message":"98","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},"no-unused-vars","'sdkReady' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["99"],"no-negated-in-lhs",["100"],["99"],["100"],"'FontAwesomeIcon' is defined but never used.",["99"],["100"],["99"],["100"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]